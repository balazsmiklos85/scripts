#!/usr/bin/python

import logging
import dbus
import threading

APPNAME = 'screen keepalive script'
REASON = 'keeping alive the screen manually'

def set_interval(func, sec):
	def func_wrapper():
		set_interval(func, sec)
		func()
	t = threading.Timer(sec, func_wrapper)
	t.start()
	return t

class DBusInhibitor:
	def __init__(self, name, path, interface, method=['Inhibit', 'UnInhibit']):
		bus = dbus.SessionBus()
		devobj = bus.get_object(name, path)
		self.iface = dbus.Interface(devobj, interface)
		self._inhibit = getattr(self.iface, method[0])
		self._uninhibit = getattr(self.iface, method[1])

	def inhibit(self):
		print('Inhibit (prevent) suspend mode')
		self.cookie = self._inhibit(APPNAME, REASON)

	def uninhibit(self):
		print('Uninhibit (allow) suspend mode')
		self._uninhibit(self.cookie)

inhibitor = DBusInhibitor('org.freedesktop.PowerManagement', '/org/freedesktop/PowerManagement/Inhibit', 'org.freedesktop.PowerManagement.Inhibit')
update_timer = set_interval(inhibitor.inhibit, 10)
input("Press Enter to continue...")
inhibitor.uninhibit
update_timer.stop()
